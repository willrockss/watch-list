server:
  port: 8060

spring:
  application:
    name: watch-list
  datasource:
    url: jdbc:postgresql://localhost:5432/watch_list
    username: postgres
    password: postgres
  sql:
    init.mode: always

integration:
  node-red:
    url: http://${CURR_HOST:localhost}:1880
    play-video-url: /play

  video-server:
    base-url: http://localhost:8000
    video-path-template: /video/%s?path=%s&videoType=%s

  google:
    credentialsFile: <path to your credentials JSON file>
    sheet:
      spreadsheetId: <your spreadsheet ID>
      moviesToWatch:
        headerRange: Посмотреть!R1C1:R10C12
        columnsMapping:
          fullName: Название фильма(year, EngName)
          preComment: ПреКоммент
          kinopoiskId: KinopoiskId
          readyToWatch: ReadyToWatch
          File: File

  kinopoisk:
    apiKey: <your Kinopoisk API Key>

  telegramBot:
    enabled: true
    apiKey: <your bot API key>
    allowedUsers: <comma separated list of usernames of allowed users>
    admins: <comma separated list of usernames of admins>
    sessionStoreType: PG

  jackett:
    apiKey: <your Jackett API key>
    baseUrl: http://localhost:9117
  qbit:
    url: http://localhost:8080

search-content:
  torrFolder: /home/${USER}/Downloads/torr

management:
  endpoints:
    web:
      exposure:
        include: metrics,loggers,prometheus